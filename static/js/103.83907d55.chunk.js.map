{"version":3,"file":"static/js/103.83907d55.chunk.js","mappings":"8NAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAChBC,EAAiB,SAAAP,GAAK,OAAIA,EAAMQ,OAAOC,KAAjB,ECgBxBC,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,E,8BClBpB,EAA8B,iC,SCQjBG,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXrB,GAAWsB,EAAAA,EAAAA,IAAYxB,GACrByB,GAAgBC,EAAAA,EAAAA,KAAhBD,YAyBR,OACE,+BACE,kBAAME,SATY,SAAAC,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,QAlBK,SAACC,EAAMC,GAK3B,GAJkB/B,EAASgC,MACzB,SAAAC,GAAO,OAAIA,EAAQH,KAAKI,gBAAkBJ,EAAKI,aAAxC,IAIP,OAAOX,EAAY,GAAD,OAAIO,EAAJ,6BAEpB,IAAMK,EAAa,CACjBL,KAAMA,EACNC,OAAQA,EACRhB,GAAIN,KAENW,GAASgB,EAAAA,EAAAA,IAAWD,GACrB,CAKCE,CAAcT,EAAKU,SAASR,KAAKS,MAAOX,EAAKU,SAASP,OAAOQ,OAC7DX,EAAKY,OACN,EAIkCC,UAAWC,EAA1C,WAEE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT/B,GAAG,OACHgC,KAAK,OACLjB,KAAK,OACLkB,MAAM,OACNC,QAAQ,yHACRC,aAAa,UAEf,SAACP,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT/B,GAAG,SACHgC,KAAK,MACLjB,KAAK,SACLkB,MAAM,SACNC,QAAQ,yFACRC,aAAa,SAEf,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYL,KAAK,SAAjC,6BAMP,ECpED,EAA8B,iCAA9B,EAAmF,uC,UCOtEM,EAAU,SAAC,GAAiB,IAAfpB,EAAc,EAAdA,QAChBlB,EAAqBkB,EAArBlB,GAAIe,EAAiBG,EAAjBH,KAAMC,EAAWE,EAAXF,OACZX,GAAWC,EAAAA,EAAAA,MAKjB,OACE,gBAAaoB,UAAWC,EAAxB,UACGZ,EADH,KACWC,GACT,SAACoB,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QANX,WACnBlC,GAASmC,EAAAA,EAAAA,IAAcxC,GACxB,EAIG,UACE,SAACyC,EAAA,EAAD,QAHKzC,EAOZ,EClBY0C,EAAc,WACzB,IAAMzD,GAAWsB,EAAAA,EAAAA,IAAYxB,GACvBS,GAASe,EAAAA,EAAAA,IAAYhB,GAQrBoD,EANsB,WAC1B,IAAMC,EAAmBpD,EAAO2B,cAChC,OAAOlC,EAASO,QAAO,SAAA0B,GAAO,OAC5BA,EAAQH,KAAKI,cAAc0B,SAASD,EADR,GAG/B,CACwBE,GAEzB,OACE,eAAIpB,UAAWC,EAAf,SACG1C,GACC0D,EAAiBI,KAAI,SAAA7B,GACnB,OAAO,SAACoB,EAAD,CAASpB,QAASA,GAAcA,EAAQlB,GAChD,KAGR,E,6BCxBD,EAAyB,uBCKZgD,EAAS,WACpB,IAAM3C,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAKoB,UAAWC,EAAhB,UACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT/B,GAAG,SACHgC,KAAK,OACLjB,KAAK,OACLkB,MAAM,uBACNC,QAAQ,yHACRC,aAAa,OACbc,SAhBqB,SAAAtC,GACzBN,GAAS6C,EAAAA,EAAAA,GAAavC,EAAEwC,cAAc3B,OACvC,EAeK4B,MAAO,CAAEC,MAAO,YAIvB,EAEDL,EAAOM,UAAY,CACjB9B,MAAO+B,IAAAA,OAAAA,WACPN,SAAUM,IAAAA,KAAAA,Y,aCvBG,SAASC,IACtB,IAAMnD,GAAWC,EAAAA,EAAAA,MACXlB,GAAYmB,EAAAA,EAAAA,IAAYpB,GACxBG,GAAQiB,EAAAA,EAAAA,IAAYlB,GAM1B,OAJAoE,EAAAA,EAAAA,YAAU,WACRpD,GAASqD,EAAAA,EAAAA,MACV,GAAE,CAACrD,KAGF,iCACE,SAACsD,EAAA,EAAD,CACEtB,QAAQ,KACRuB,cAAY,EACZR,MAAO,CAAES,UAAW,SAAUC,UAAW,QAH3C,wBAOA,SAAC1D,EAAD,KACA,SAAC4C,EAAD,IACC5D,IAAcE,IAAS,SAACyE,EAAA,EAAD,KACxB,SAACrB,EAAD,MAGL,C,wCCjCGsB,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kFACD,UACJN,EAAQ,EAAUG,C,mCCHlB,IAAII,EAAuBR,EAAQ,MAEnC,SAASS,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOX,QAAU,WACf,SAASY,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWX,EAAf,CAIA,IAAIY,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAItE,KAAO,sBACLsE,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACN9D,OAAQ8D,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBjC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAelC,UAAYkC,EAEpBA,CACR,C,uBC/CCZ,EAAOX,QAAUD,EAAQ,IAARA,E,gCCNnBY,EAAOX,QAFoB,8C","sources":["redux/selectors.js","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Styles/ContactForm.module.css?b333","components/ContactForm.js","webpack://react-homework-template/./src/components/Styles/ContactList.module.css?1bb3","components/Contact.js","components/ContactList.js","webpack://react-homework-template/./src/components/Styles/Filter.module.css?8866","components/Filter.js","pages/Contacts.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getQueryFilter = state => state.filter.query;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__Pub9C\",\"contactForm__part\":\"ContactForm_contactForm__part__VMfSl\",\"contactForm__label\":\"ContactForm_contactForm__label__JBolf\",\"contactForm__input\":\"ContactForm_contactForm__input__agtRo\",\"contactForm__btn\":\"ContactForm_contactForm__btn__aeQL2\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { nanoid } from 'nanoid';\nimport { useNotify } from 'hooks/useNotify';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport css from './Styles/ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const { showFailure } = useNotify();\n\n  const addNewContact = (name, number) => {\n    const condition = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (condition) {\n      return showFailure(`${name} is already in contacts!`);\n    }\n    const newContact = {\n      name: name,\n      number: number,\n      id: nanoid(),\n    };\n    dispatch(addContact(newContact));\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    addNewContact(form.elements.name.value, form.elements.number.value);\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handlerSubmit} className={css.contactForm}>\n        {/* <div className={css.contactForm__part}> */}\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          autoComplete=\"name\"\n        />\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          autoComplete=\"tel\"\n        />\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__22Clv\",\"contactList__item\":\"ContactList_contactList__item__uJeVU\",\"contactList__btn\":\"ContactList_contactList__btn__WTbUc\"};","import { useDispatch } from 'react-redux';\nimport css from './Styles/ContactList.module.css';\n// import { deleteContact } from 'redux/sliceContacts';\nimport { deleteContact } from 'redux/operations';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\n\nexport const Contact = ({ contact }) => {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <li key={id} className={css.contactList__item}>\n      {name}: {number}\n      <Button variant=\"contained\" onClick={handleDelete}>\n        <DeleteIcon />\n      </Button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSelector } from 'react-redux';\nimport { Contact } from './Contact';\nimport { getContacts, getQueryFilter } from 'redux/selectors';\nimport css from './Styles/ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getQueryFilter);\n\n  const getFilteredContacts = () => {\n    const lowerCasedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCasedFilter)\n    );\n  };\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ul className={css.contactList}>\n      {contacts &&\n        filteredContacts.map(contact => {\n          return <Contact contact={contact} key={contact.id} />;\n        })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__6eFGn\",\"filter__label\":\"Filter_filter__label__3Dpsc\",\"filter__input\":\"Filter_filter__input__lKhd7\"};","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/sliceFilter';\nimport { TextField } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport css from './Styles/Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"filter\"\n        type=\"text\"\n        name=\"name\"\n        label=\"Find contact by name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        autoComplete=\"name\"\n        onChange={handleChangeFilter}\n        style={{ width: '400px' }}\n      />\n    </div>\n  );\n};\n\nFilter.prpoTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { Loader } from 'components/Loader';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { getIsLoading } from 'redux/selectors';\nimport { getError } from 'redux/selectors';\nimport Typography from '@mui/material/Typography';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Typography\n        variant=\"h3\"\n        gutterBottom\n        style={{ textAlign: 'center', marginTop: '40px' }}\n      >\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getQueryFilter","filter","query","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","dispatch","useDispatch","useSelector","showFailure","useNotify","onSubmit","e","preventDefault","form","target","name","number","find","contact","toLowerCase","newContact","addContact","addNewContact","elements","value","reset","className","css","TextField","margin","required","fullWidth","type","label","pattern","autoComplete","Button","variant","Contact","onClick","deleteContact","Delete","ContactList","filteredContacts","lowerCasedFilter","includes","getFilteredContacts","map","Filter","onChange","changeFilter","currentTarget","style","width","prpoTypes","PropTypes","Contacts","useEffect","fetchContacts","Typography","gutterBottom","textAlign","marginTop","Loader","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}